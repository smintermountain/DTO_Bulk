<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_inthe_dto_bulk.DisposalTOStageHandler</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>DisposalTOStageHandler</name>
        <script><![CDATA[var DisposalTOStageHandler = Class.create();
DisposalTOStageHandler.prototype = {
    initialize: function() {
    },
	
	/*
	 * Determines whether a specific staging button should be visible or not.
	 * Note: transferOrder can refer to a transfer order or a transfer order
	 * line
	 */
	isUIActionAllowed : function(transferOrder, requestedUIAction) {
		if (transferOrder.u_stage == 'new' &&
				requestedUIAction == 'requested' &&
				this._getChildrenInStage(transferOrder, 'new') > 0)
			return true;
		else if ((transferOrder.u_stage == 'shipment_preparation' ||
				transferOrder.u_stage == 'requested' || transferOrder.u_stage == 'new') &&
				requestedUIAction == 'cancellation' &&
				transferOrder.asset.nil() == false) {
			return true;
		} else if (requestedUIAction == 'shipment_preparation') {
			if ((transferOrder.u_stage == 'in_transit' ||
					this._getChildrenInStage(transferOrder, 'in_transit') > 0))
				return true;
			
		} else if (requestedUIAction == 'ship') {
			if ((transferOrder.u_stage == 'warehoused' ||
					this._getChildrenInStage(transferOrder, 'warehoused') > 0))
				return true;
		} //else if ((transferOrder.u_stage == 'warehoused' || transferOrder.u_stage == 'partially_shipped') &&
				//(requestedUIAction == 'ship')) {
			//if (this._getChildrenInStage(transferOrder, 'shipment_preparation') > 0 &&
					//this._getChildrenInStage(transferOrder, 'requested') === 0)
				//return true;
		//} else
			//return false;
	},

	/*
	 * Determines if the receive button with no dialog should pop up or not
	 */
	isReceivingAllowed : function(transferOrderLine) {
	/*	if (SNC.AssetMgmtUtil.isPluginRegistered('com.snc.work_management') &&
				transferOrderLine.transfer_order.to_stockroom.type.value == 'field_agent') {
			return false;
		} else if (SNC.AssetMgmtUtil.isPluginRegistered('com.snc.field_service_management') &&
				transferOrderLine.transfer_order.to_stockroom.type.value == 'field_agent') {
			return false;
		} else if (transferOrderLine.u_stage == 'in_transit') {
			if (transferOrderLine.quantity_remaining == 1 || transferOrderLine.asset.substatus == 'pre_allocated')
				return true;
			else
				return false; */
			
		 if (transferOrderLine.u_stage == 'warehoused') {
				return true;
		}
		
	},

	/*
	 * Determines if the receive button with dialog should pop up or not
	 */
/*	isReceivingAllowedDialog : function(transferOrderLine) {
		if (SNC.AssetMgmtUtil.isPluginRegistered('com.snc.work_management') &&
				transferOrderLine.transfer_order.to_stockroom.type.value == 'field_agent') {
			return false;
		} else if (SNC.AssetMgmtUtil.isPluginRegistered('com.snc.field_service_management') &&
				transferOrderLine.transfer_order.to_stockroom.type.value == 'field_agent') {
			return false;
		} else if (transferOrderLine.u_stage == 'in_transit') {
			if (transferOrderLine.quantity_remaining != 1 &&
					(transferOrderLine.model.sys_class_name == 'cmdb_consumable_product_model' || transferOrderLine.model.asset_tracking_strategy == 'track_as_consumable'))
				return true;
			else
				return false;
		}
	},

	/*
	 * Propagates the Transfer Order Stages among its Transfer Order Line Stages
	 */
	pushStageFromTO : function(transferOrder, action) {
		var newTOLStage = 0;
		var newTOStage = 0;
		if (action == 'requested') {
			newTOLStage = 1;
			newTOStage = 1;
		} else if (action == 'shipment_preparation') {
			newTOLStage = 2;
			newTOStage = 2;
		/*} else if (action == 'ship') {
			newTOLStage = 3;
			newTOStage = 3; */
		}

		var helper = new DisposalTOStageHelper();
		var grTOL = new GlideRecord('u_alm_disposal_transfer_order_line');
		grTOL.addQuery('u_disposal_transfer_order', transferOrder.sys_id);
		grTOL.addQuery('u_stage', helper.getStageTOL(newTOLStage - 1).u_stage);
		grTOL.query();

		while (grTOL.next()) {
			grTOL.u_stage = helper.getStageTOL(newTOLStage).u_stage;
			if (action == 'requested')
				grTOL.u_quantity_remaining = grTOL.u_quantity_requested;
			grTOL.update();
		}

		transferOrder.u_stage = helper.getStageTO(newTOStage).u_stage;
		transferOrder.update();
	},

	/*
	 * When all the Transfer Order Lines change to specific stages, it pushes
	 * the Transfer Order to change its stage.
	 */
	pushStageFromTOL : function(transferOrderLine, action) {
		//gs.log('***This is firing***');
		var totalChildren = this._getChildrenCount(transferOrderLine.u_disposal_transfer_order);
		var stageChildren = this._getChildrenInStage(transferOrderLine.u_disposal_transfer_order, transferOrderLine.u_stage);

		var grTO = new GlideRecord('u_alm_disposal_transfer_order');
		grTO.addQuery('sys_id', transferOrderLine.u_disposal_transfer_order.sys_id);
		grTO.query();

		if (grTO.next()) {
			if (action == 'in_transit') {
				if (totalChildren == stageChildren)
					grTO.u_stage = 'fully_shipped';
				else
					grTO.u_stage = 'partially_shipped';
			} else if (action == 'cancelled') {
				if (totalChildren == stageChildren)
					grTO.u_stage = 'cancelled';
			} else if ((action == 'received') &&
				totalChildren == stageChildren) {
				grTO.u_stage = 'pending_data_wipe';
			}/*else if (action == 'shipment_preparation' &&
					grTO.u_stage != 'partially_shipped')
				grTO.u_stage = action;*/
			grTO.update();
		}
	},

	_getChildrenInStage : function(transferOrder, stage) {
		var grTOL = new GlideRecord('u_alm_disposal_transfer_order_line');
		grTOL.addQuery('u_disposal_transfer_order', transferOrder.sys_id);
		grTOL.addQuery('u_stage', 'IN', stage);
		grTOL.query();

		return grTOL.getRowCount();
	},

	_getChildrenCount : function(transferOrder) {
		var grTOL = new GlideRecord('u_alm_disposal_transfer_order_line');
		grTOL.addQuery('u_disposal_transfer_order', transferOrder.sys_id);
		grTOL.query();

		return grTOL.getRowCount();
	},

    type: 'DisposalTOStageHandler'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>awyoung</sys_created_by>
        <sys_created_on>2017-09-18 19:59:06</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>379cab1d4f99c300af76d0af0310c79c</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>DisposalTOStageHandler</sys_name>
        <sys_package display_value="DTO Bulk Load" source="x_inthe_dto_bulk">62efdcfc4f198300f5f3d49f0310c7cd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="DTO Bulk Load">62efdcfc4f198300f5f3d49f0310c7cd</sys_scope>
        <sys_update_name>sys_script_include_379cab1d4f99c300af76d0af0310c79c</sys_update_name>
        <sys_updated_by>awyoung</sys_updated_by>
        <sys_updated_on>2017-09-18 20:13:26</sys_updated_on>
    </sys_script_include>
</record_update>
